Merge Sort

#include <iostream>
using namespace std;
int merge(int a[],int beg, int mid, int end){
   int i, j, k;  
    int n = mid - beg + 1;    
    int m = end - mid;    
    int arr1[n];
    int arr2[m];
    for (int i = 0; i < n; i++)    
    arr1[i] = a[beg + i];    
    for (int j = 0; j < m; j++)    
    arr2[j] = a[mid + 1 + j];    
  i=0,j=0,k=beg;
  while (i < n && j < m) {
      if (arr1[i] <= arr2[j]) {
         a[k] = arr1[i];
         k++;
         i++;
      } else {
         a[k] = arr2[j];
           k++;
         j++;
      }
   }
   while (j>=m && i < n) {
      a[k] = arr1[i];
        k++;
         i++;
   }
   while (j < m && i>=n) {
      a[k] = arr2[j];
        k++;
         j++;
   }
  return 0;
}
int mergeSort(int a[], int beg, int end){  
    if (beg < end)   
    {  
        int mid = (beg + end) / 2;  
        mergeSort(a, beg, mid);  
        mergeSort(a, mid + 1, end);  
        merge(a, beg, mid, end);  
    }  
    return 0;
} 
int main()
{
  int n,i;
   cout<<"Enter the size of array ";
   cin>>n;
   int a[n];
   cout<<"Enter the elements of array "; 
   for( i=0;i<n;i++){
       cin>>a[i];
   }  
   mergeSort(a,0,n - 1);
   cout<<"The elements of array after sorting is ";
   for( i=0;i<n;i++){
       cout<<a[i]<<" ";
   } 
}


